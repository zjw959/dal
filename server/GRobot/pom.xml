<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>phanta.dal</groupId>
        <artifactId>DAL</artifactId>
        <version>1.0.0</version>
    </parent>
    
    <packaging>jar</packaging>
    <artifactId>GRobot</artifactId>
    
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

    <dependencies>
        <dependency>
            <groupId>phanta.dal</groupId>
            <artifactId>GameCore</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>phanta.dal</groupId>
            <artifactId>GameData</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>phanta.dal</groupId>
            <artifactId>Message</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>3.10.6.Final</version>
        </dependency>

        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.10</version>
        </dependency>

        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>2.0.0-RC1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>

    </dependencies>
    
	<build>
	    <finalName>${project.artifactId}.${project.version}</finalName>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<!-- 项目依赖插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
					<excludeTransitive>false</excludeTransitive> <!-- 表示是否不包含间接依赖的包 -->
					<stripVersion>false</stripVersion> <!-- 去除版本信息 -->
				</configuration>

				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 拷贝项目依赖包到lib/目录下 -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 项目资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<!--拷贝配置文件 -->
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 拷贝项目*/src/main/resources目录下所有文件到*/src/main/resources目录下 -->
							<outputDirectory>${project.build.directory}/conf</outputDirectory>
							<resources>
								<resource>
									<directory>conf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<tasks>
						<if>
							<contains string="${os.name}" substring="Windows" />
							<then>
								<compilerArguments>
									<verbose />
									<!-- 分隔符受运行系统影响，Windows（分隔符英文分号）linux(分隔符英文冒号) -->
									<bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>
								</compilerArguments>
							</then>
							<else>
								<compilerArguments>
									<verbose />
									<!-- 分隔符受运行系统影响，Windows（分隔符英文分号）linux(分隔符英文冒号) -->
									<bootclasspath>${java.home}/lib/rt.jar:${java.home}/lib/jce.jar</bootclasspath>
								</compilerArguments>
							</else>
						</if>
					</tasks>
				</configuration>
			</plugin>

			<!-- 打包插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<!-- 生成MANIFEST.MF的设置 -->
						<manifest>
							<!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 -->
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<!-- jar启动入口类 -->
							<mainClass>main.Main</mainClass>
						</manifest>
						<manifestEntries>
							<!-- 在Class-Path下添加配置文件的路径 -->
							<Class-Path>conf/</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
